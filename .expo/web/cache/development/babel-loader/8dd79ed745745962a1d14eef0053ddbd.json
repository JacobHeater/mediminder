{"ast":null,"code":"var _jsxFileName = \"/Users/jacobheater/dev/Mediminder/views/tabs/generate-screen-options.tsx\";\nimport React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nexport function generateScreenOptions(_ref) {\n  var route = _ref.route;\n  return {\n    tabBarIcon: function tabBarIcon(_ref2) {\n      var focused = _ref2.focused,\n          color = _ref2.color,\n          size = _ref2.size;\n      var iconName;\n\n      switch (route.name) {\n        case 'Home':\n          iconName = 'home';\n          break;\n\n        case 'History':\n          iconName = 'time';\n          break;\n\n        case 'Settings':\n          iconName = 'cog';\n          break;\n\n        default:\n          throw new Error(\"Invalid route name: \" + route.name);\n      }\n\n      return React.createElement(Ionicons, {\n        name: iconName,\n        size: size,\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        }\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/Users/jacobheater/dev/Mediminder/views/tabs/generate-screen-options.tsx"],"names":["React","Ionicons","generateScreenOptions","route","tabBarIcon","focused","color","size","iconName","name","Error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,SAASC,qBAAT,OAA0C;AAAA,MAATC,KAAS,QAATA,KAAS;AAC/C,SAAO;AACLC,IAAAA,UADK,6BACgC;AAAA,UAAxBC,OAAwB,SAAxBA,OAAwB;AAAA,UAAfC,KAAe,SAAfA,KAAe;AAAA,UAARC,IAAQ,SAARA,IAAQ;AACnC,UAAIC,QAAJ;;AAEA,cAAQL,KAAK,CAACM,IAAd;AACE,aAAK,MAAL;AACED,UAAAA,QAAQ,GAAG,MAAX;AACA;;AACF,aAAK,SAAL;AACEA,UAAAA,QAAQ,GAAG,MAAX;AACA;;AACF,aAAK,UAAL;AACEA,UAAAA,QAAQ,GAAG,KAAX;AACA;;AACF;AACE,gBAAM,IAAIE,KAAJ,0BAAiCP,KAAK,CAACM,IAAvC,CAAN;AAXJ;;AAcA,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAED,QAAhB;AAA0B,QAAA,IAAI,EAAED,IAAhC;AAAsC,QAAA,KAAK,EAAED,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AAnBI,GAAP;AAqBD","sourcesContent":["import React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\n\nexport function generateScreenOptions({ route }) {\n  return {\n    tabBarIcon({ focused, color, size }) {\n      let iconName: string;\n\n      switch (route.name) {\n        case 'Home':\n          iconName = 'home';\n          break;\n        case 'History':\n          iconName = 'time';\n          break;\n        case 'Settings':\n          iconName = 'cog';\n          break;\n        default:\n          throw new Error(`Invalid route name: ${route.name}`);\n      }\n\n      return <Ionicons name={iconName} size={size} color={color} />;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}